events {
    worker_connections 1024;
}

http {
    # Define upstream servers for load balancing
    upstream hash_service {
        # Round-robin is the default load balancing method
        server nosql-service-1:3000;
        server nosql-service-2:3000;
        server nosql-service-3:3000;
        server nosql-service-4:3000;
    }

    # Log format for debugging
    log_format detailed '$remote_addr - $remote_user [$time_local] '
                       '"$request" $status $body_bytes_sent '
                       '"$http_referer" "$http_user_agent" '
                       'upstream: $upstream_addr';

    access_log /var/log/nginx/access.log detailed;
    error_log /var/log/nginx/error.log;

    server {
        listen 80;
        server_name localhost;

        # Health check endpoint for the load balancer itself
        location /health {
            access_log off;
            return 200 "MongoDB Load balancer is healthy\n";
            add_header Content-Type text/plain;
        }

        # Load balancer status page
        location /nginx-status {
            return 200 "MongoDB Nginx Load Balancer Status: Active\nUpstream servers: 4\nLoad balancing method: Round Robin\n";
            add_header Content-Type text/plain;
        }

        # Proxy all other requests to the hash services
        location / {
            proxy_pass http://hash_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Add custom headers to identify which instance handled the request
            proxy_set_header X-Load-Balancer "nosql-nginx-round-robin";
            
            # Health check configuration
            proxy_connect_timeout 5s;
            proxy_send_timeout 10s;
            proxy_read_timeout 10s;
            
            # Retry configuration
            proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
            proxy_next_upstream_tries 3;
        }
    }
} 